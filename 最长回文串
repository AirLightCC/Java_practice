给定一个包含大写字母和小写字母的字符串，找到通过这些字母构造成的最长的回文串。

在构造过程中，请注意区分大小写。比如 "Aa" 不能当做一个回文字符串。

注意:
假设字符串的长度不会超过 1010。

示例 1: 

输入:
"abccccdd"

输出:
7

解释:
我们可以构造的最长的回文串是"dccaccd", 它的长度是 7。


import java.util.HashMap;
import java.util.Map.Entry;
class Solution {
    public int longestPalindrome(String s) {
        if (s.length() == 0) {
            return 0;
        }
        char[] sArr = s.toCharArray();
        HashMap<Character, Integer> map = new HashMap<Character, Integer>();
        for (int i = 0; i < sArr.length; i++) {
            if (!map.containsKey(sArr[i])) {
                map.put(sArr[i], 1);
            }
            else {
                map.put(sArr[i], map.get(sArr[i]) + 1);
            }
        }
        
        int maxLen = 0;
        int value = 0;
        int flag = 0; 
        for (Entry<Character, Integer> entry : map.entrySet()) {
            value = entry.getValue();
            if (value % 2 == 0) {
                maxLen = maxLen + value;
            }
            else {
                maxLen = maxLen + value - 1;
                flag = 1;
            }
        }
        return maxLen + flag;
    }
}
